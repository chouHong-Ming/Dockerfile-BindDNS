apiVersion: v1
kind: PersistentVolume
metadata:
  name: dns
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 100Gi
  nfs:
    path: [YOUR_NFS_PATH]
    server: [YOUR_NFS_IP]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dns
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: dns

---
  apiVersion: v1
  data:
    named.conf: |
      //
      // named.conf
      //
      // Provided by Red Hat bind package to configure the ISC BIND named(8) DNS
      // server as a caching only nameserver (as a localhost DNS resolver only).
      //
      // See /usr/share/doc/bind*/sample/ for example named configuration files.
      //
      // See the BIND Administrator's Reference Manual (ARM) for details about the
      // configuration located in /usr/share/doc/bind-{version}/Bv9ARM.html
      
      acl internals { 192.168.0.0/24; };
      
      options {
              listen-on port 53 { 0.0.0.0/0; };
              listen-on-v6 port 53 { ::1; };
              directory       "/var/named";
              dump-file       "/var/named/data/cache_dump.db";
              statistics-file "/var/named/data/named_stats.txt";
              memstatistics-file "/var/named/data/named_mem_stats.txt";
              recursing-file  "/var/named/data/named.recursing";
              secroots-file   "/var/named/data/named.secroots";
              allow-query     { 0.0.0.0/0; };
              allow-transfer  { internals; };
      
              /*
              - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
              - If you are building a RECURSIVE (caching) DNS server, you need to enable
                recursion.
              - If your recursive DNS server has a public IP address, you MUST enable access
                control to limit queries to your legitimate users. Failing to do so will
                cause your server to become part of large scale DNS amplification
                attacks. Implementing BCP38 within your network would greatly
                reduce such attack surface
              */
              recursion yes;
      
              dnssec-enable yes;
              dnssec-validation yes;
      
              /* Path to ISC DLV key */
              bindkeys-file "/etc/named.iscdlv.key";
      
              managed-keys-directory "/var/named/dynamic";
      
              pid-file "/run/named/named.pid";
              session-keyfile "/run/named/session.key";
      };
      
      logging {
              channel default_debug {
                      file "data/named.run";
                      severity dynamic;
              };
      };
      
      zone "." IN {
              type hint;
              file "named.ca";
      };
      
      zone "abc.com" IN {
              type master;
              // Setting for the secondary DNS server if you have
              // notify yes;
              // also-notify { 2.2.2.2; };
      
              file "/var/named/abc.com.zone";
              allow-query     { 0.0.0.0/0; };
      };
      
      include "/etc/named.rfc1912.zones";
      include "/etc/named.root.key";
  kind: ConfigMap
  metadata:
    labels:
      app: dns
    name: dns
    namespace: [YOUR_K8S_NAMESPACE]
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dns
  name: dns
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dns
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dns
        manualrestart: 20200906-2330
    spec:
      containers:
      - image: chouhongming/bind-dns
        imagePullPolicy: Always
        name: dns
        ports:
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
          hostPort: 53
        - containerPort: 53
          name: dns-udp
          protocol: UDP
          hostPort: 53
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/named.conf
          name: dns-setting
          subPath: named.conf
        - mountPath: /var/named
          name: dns-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: dns-setting
        configMap:
          defaultMode: 420
          name: dns
      - name: dns-storage
        persistentVolumeClaim:
          claimName: dns

